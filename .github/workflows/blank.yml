name: Build 

on: 
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Check server performance
      run: |
        echo "警告⚠"
        echo "若分配的服务器性能不足，务必及时取消，重新运行！"
        echo "已知编译成功CPU型号：8370C,8171M"
        echo "已知性能不足CPU型号：8272CL"
        echo -e "-------------- ------------CPU信息------------------------------------------\n"
        echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
        echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "-------------------------------内存信息-------------------------------------------"
        echo "已安装内存详细信息："
        sudo lshw -short -C memory | grep GiB
        echo -e "\n"
        echo "-----------------------------硬盘信息---------------------------------------------"
        echo -e  "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
        echo "硬盘详情："
        df -Th

    - name: Initialization environment
      run: |
        sudo apt update -y
        sudo apt full-upgrade -y
        sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
    - name: Clone source code
      run: |
        #git clone --depth=1 https://github.com/chongshengB/rt-n56u.git /opt/rt-n56u
        #cd /opt/rt-n56u/toolchain-mipsel
        #sh dl_toolchain.sh
        #mkdir -p /opt/images/
        git clone https://github.com/coolsnowwolf/lede
        cd lede
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        echo 'CONFIG_TARGET_mediatek=y' >>.config
        echo 'CONFIG_TARGET_mediatek_mt7622=y' >>.config
        echo 'CONFIG_TARGET_mediatek_mt7622_DEVICE_xiaomi_redmi-router-ax6s=y' >>.config
        make defconfig
    - name: Build Firmware
      run: |
        cd lede
        make download -j8
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
    - name: Prepare artifact
      run: |
          cd lede
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
    - name: Deliver buildinfo
      uses: actions/upload-artifact@v2
      with:
          name: OpenWrt_buildinfo
          path: ./lede/artifact/buildinfo/

    - name: Deliver package
      uses: actions/upload-artifact@v2
      with:
          name: OpenWrt_package
          path: ./lede/artifact/package/

    - name: Deliver firmware
      uses: actions/upload-artifact@v2
      with:
          name: OpenWrt_firmware
          path: ./lede/bin/targets/
  

