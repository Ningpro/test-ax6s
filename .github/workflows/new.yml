# This is a basic workflow to help you get started with Actions

name: CI2

# Controls when the workflow will run
on:


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Runs a single command using the runners shell
      - name: CPU及核心数
        run: |
          echo "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) "
          cat /proc/cpuinfo | grep name | cut -f2 -d: | grep  8370C
      # Runs a set of commands using the runners shell
      - name: 8370C执行区
        run: |
          #Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz
          echo test, and deploy your project.
      - name: 自定义脚本
        run: |
         chmod +x diy.sh
         ./diy.sh
      - name: 获取名字
        run: |
          cd lede
          grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
          [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        
      - name: Check space usage
        if: (!cancelled())
        run: df -hT
      - name: Organize files
        id: organize
      #if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        run: |
          cd lede/bin/targets/*/*
          rm -rf packages
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "::set-output name=status::success"
      - name: Upload firmware directory
        uses: actions/upload-artifact@main
          #if: steps.organize.outputs.status == 'success' && !cancelled()
        with:
          name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
          path: ${{ env.FIRMWARE }}
